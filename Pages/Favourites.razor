@page "/favourites"
@using WeBScraper_CourseProject_
@inject IScraperService ScraperService
@inject NavigationManager NavigationManager

<AuthorizeView>
    <Authorized>
        <h3>Favourites</h3>

        @if (LstData == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <div class="row row-cols-1 row-cols-md-3 g-4">
                @foreach (var item in LstData)
                {


                    <div class="col">
                        <div class="card h-100">
                            <img src="@item.Img" class="card-img-top" alt="...">
                            <div class="card-body">
                                <h5 class="card-title">Sport</h5>
                                <p class="card-text">@item.Title</p>
                            </div>
                            <div class="card-footer">
                                <button type="button" class="btn btn-primary" @onclick="(() => ShowConversations(item.Id))">Conversations<i class="bi bi-chat-square-text m-2"></i></button>
                                <button type="button" class="btn btn-danger" @onclick="(() => Delete(item.Id))">Delete<i class="bi bi-trash m-2"></i></button>
                            </div>
                            <div class="card-footer">
                                <small class="text-muted"><a href="@item.Details">Details</a></small>
               
                            </div>
                        </div>
                    </div>

                }

            </div>
        }


</Authorized>

<NotAuthorized>     
        <h3>To work with the system, you need to <a href="https://localhost:7023/Identity/Account/Register">register</a> or <a href="https://localhost:7023/Identity/Account/Login">authorize</a></h3>
        
</NotAuthorized>

</AuthorizeView>
@code {
    public List<News> LstData;

    protected override async Task OnInitializedAsync()
    {
        LstData = await ScraperService.GetDbNews();
    }

    async Task ShowConversations(int id)
    {
        NavigationManager.NavigateTo($"conversations/{id}");
    }

    async Task Delete(int id)
    {
        await ScraperService.DeleteNews(id);
        NavigationManager.NavigateTo("favourites", true);
    }

}
